package leetcode;

import java.util.*;

public class N923 {

    static class Node implements Comparable<Node>{
        int number;
        int startIndex;

        int endIndex;

        public Node(int number,int startIndex,int endIndex){
            this.number=number;
            this.startIndex =startIndex;
            this.endIndex=endIndex;
        }

        public int compareTo(Node o){
            if(this.number<o.number) return -1;
            else if(this.number==o.number){
                if(this.startIndex <o.startIndex){
                    return -1;
                }else if(this.startIndex==o.startIndex){
                    if(this.endIndex <o.endIndex){
                        return -1;
                    }else{
                        return 1;
                    }
                }else return 1;
            }
            else return 1;
        }
    }

    public static void main(String[] args) {
        N923 main = new N923();
        System.out.println(main.threeSumMulti(new int[]
                {},
                113));;
    }

    static final long MOD=1_000_000_007;
    static Node[] nodes;
    static int size;
    public int threeSumMulti(int[] A, int T) {
        long[] nmap = new long[101];
        long ans = 0;
        for (int num : A) nmap[num]++;
        for (int k = 100; k >= 0; k--)
            for (int j = k; j >= 0; j--) {
                int i = T - k - j;
                if (i > j || i < 0) continue;
                long x = nmap[i], y = nmap[j], z = nmap[k], res = x * y * z;
                if (res == 0) continue;
                if (i == k) res = x * (x-1) * (x-2) / 6;
                else if (i == j) res = x * (x-1) / 2 * z;
                else if (j == k) res = x * y * (y-1) / 2;
                ans += res;
            }
        return (int)(ans % 1000000007);
    }

}
